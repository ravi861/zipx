<!-- THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF 
 ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
 PARTICULAR PURPOSE.

 Copyright (c) Microsoft Corporation. All rights reserved -->

<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	x:Class="ListViewInteraction.App"
	RequestedTheme="Light" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="using:ListViewInteraction"
	mc:Ignorable="d">
	<Application.Resources>
		<ResourceDictionary>
			<Style x:Key="TitleStyle" TargetType="TextBlock">
				<Setter Property="Foreground" Value="#707070" />
				<Setter Property="FontFamily" Value="Segoe UI Light" />
				<Setter Property="FontSize" Value="16" />
			</Style>
			<Style x:Key="H1Style" TargetType="TextBlock">
				<Setter Property="Foreground" Value="White" />
				<Setter Property="FontFamily" Value="Segoe UI" />
				<Setter Property="FontSize" Value="65" />
                <Setter Property="FontWeight" Value="Light" />
			</Style>
			<Style x:Key="H2Style" TargetType="TextBlock">
				<Setter Property="Foreground" Value="#212121" />
				<Setter Property="FontFamily" Value="Segoe UI" />
				<Setter Property="FontSize" Value="14.667" />
				<Setter Property="Margin" Value="0,0,0,0" />
			</Style>
			<Style x:Key="H3Style" TargetType="TextBlock">
				<Setter Property="Foreground" Value="#212121" />
				<Setter Property="FontFamily" Value="Segoe UI Semilight" />
				<Setter Property="FontSize" Value="14.667" />
				<Setter Property="Margin" Value="0,0,0,5" />
			</Style>
			<Style x:Key="ListBoxTextStyle" TargetType="TextBlock">
				<Setter Property="FontFamily" Value="Segoe UI Light" />
				<Setter Property="FontSize" Value="16" />
			</Style>
			<Style x:Key="DescriptionTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="White" />
				<Setter Property="FontFamily" Value="Segoe UI Light" />
				<Setter Property="FontSize" Value="16" />
			</Style>
            <Style x:Key="TitleTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontFamily" Value="Segoe UI Light" />
                <Setter Property="FontSize" Value="14" />
            </Style>
            <Style x:Key="TypeTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontFamily" Value="Segoe UI Light" />
                <Setter Property="FontSize" Value="12" />
            </Style>
            <Style x:Key="SeparatorStyle" TargetType="TextBlock">
				<Setter Property="Foreground" Value="#DD000000" />
				<Setter Property="FontFamily" Value="Segoe UI" />
				<Setter Property="FontSize" Value="9" />
			</Style>
			<Style x:Key="FooterStyle" TargetType="TextBlock">
				<Setter Property="Foreground" Value="#DD000000" />
				<Setter Property="FontFamily" Value="Segoe UI" />
				<Setter Property="FontSize" Value="12" />
				<Setter Property="Margin" Value="0,8,0,0" />
			</Style>
			<Style x:Key="TextBoxStyle" TargetType="TextBox">
				<Setter Property="Foreground" Value="White"/>
				<Setter Property="FontFamily" Value="Segoe UI Light" />
				<Setter Property="FontSize" Value="16" />
			</Style>
            
        <!-- Shared Resources -->
        <FontFamily x:Key="ContentFontFamily">Segoe UI</FontFamily>
        <SolidColorBrush x:Key="PlaceholderImageBrush" Color="Gray"/>


        <!--TextBlock Styles-->
        <Style x:Key="DefaultFontStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Teal"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="TextTrimming" Value="WordEllipsis"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>


        <Style x:Key="SmallContentTextStyle" TargetType="TextBlock">
<Setter Property="Foreground" Value="#FF8AD0D6"/>
            <Setter Property="FontSize" Value="14.667"/>
            <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextTrimming" Value="WordEllipsis"/>
        </Style>

        <Style x:Key="MediumContentFontSize" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextTrimming" Value="WordEllipsis"/>
            <Setter Property="FontSize" Value="18.667"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Height" Value="Auto"/>
        </Style>
        <Style x:Key="LargeContentFontStyle" TargetType="TextBlock" BasedOn="{StaticResource DefaultFontStyle}"/>

        <Style x:Key="ReadingFontStyle" TargetType="TextBlock" BasedOn="{StaticResource DefaultFontStyle}">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="14.667"/>
        </Style>

        <Style x:Key="SmallContentFontStyle" TargetType="TextBlock" BasedOn="{StaticResource DefaultFontStyle}">
            <Setter Property="FontSize" Value="14.667"/>
        </Style>

        <Style x:Key="SubHeaderTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="WordEllipsis"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="ImagePlaceHolderStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource PlaceholderImageBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>

        <SolidColorBrush x:Key="HighlightBrush" Color="#FF26A0DA"/>

        <Style x:Key="MoCoContentTextStackPanelStyle" TargetType="StackPanel">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,8,0,0"/>
        </Style>

        <Style x:Key="NonWrappingSmallContentTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14.667"/>
            <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="WordEllipsis"/>
        </Style>
<!-- TextBlock styles -->

            <Style x:Key="BasicTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
                <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
                <Setter Property="TextTrimming" Value="WordEllipsis"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="Typography.StylisticSet20" Value="True"/>
                <Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
                <Setter Property="Typography.CaseSensitiveForms" Value="True"/>
            </Style>

            <Style x:Key="BaselineTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BasicTextStyle}">
                <Setter Property="LineHeight" Value="20"/>
                <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
                <!-- Properly align text along its baseline -->
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-1" Y="4"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
                <Setter Property="FontSize" Value="65"/>
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="LineHeight" Value="40"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-2" Y="8"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SubheaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
                <Setter Property="FontSize" Value="30"/>
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="LineHeight" Value="30"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-1" Y="6"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CaptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
                <Setter Property="LineHeight" Value="10"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="Light"/>
            </Style>
            
            <!-- Scenario #1 Resources -->
        <DataTemplate x:Key="StoreFrontTileTemplate">
            <Grid Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="140"/>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Source="{Binding Image}" Height="40" Width="44" VerticalAlignment="Center" Stretch="Fill"/>
                        <TextBlock Grid.Column="1" TextWrapping="NoWrap" Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="StoreFrontTileStyle"  TargetType="GridViewItem">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="80" />
            <Setter Property="Width" Value="292" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="TabNavigation" Value="Local" />
        </Style>

        <ItemsPanelTemplate x:Key="StoreFrontGridItemsPanelTemplate">
            <WrapGrid VerticalChildrenAlignment="Top" HorizontalChildrenAlignment="Left"/>
        </ItemsPanelTemplate>
            
            <Style x:Key="GridViewItemStyle1" TargetType="GridViewItem">
                <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="TabNavigation" Value="Local"/>
                <Setter Property="IsHoldingEnabled" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewItem">
                            <Border x:Name="OuterContainer" IsHoldingEnabled="False" IsDoubleTapEnabled="False" IsRightTapEnabled="False">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <PointerDownThemeAnimation TargetName="ContentContainer"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverPressed">
                                            <Storyboard>
                                                <PointerDownThemeAnimation TargetName="ContentContainer"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                        <VisualState x:Name="PointerFocused"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionHintStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="VerticalSelectionHint">
                                            <Storyboard>
                                                <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
                                                <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
                                                <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="HorizontalSelectionHint">
                                            <Storyboard>
                                                <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
                                                <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
                                                <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="NoSelectionHint"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="UnselectedSwiping">
                                            <Storyboard>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Selecting">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedSwiping">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unselecting">
                                        </VisualState>
                                        <VisualState x:Name="Unselected">
                                        </VisualState>
                                        <VisualState x:Name="SelectedUnfocused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DragStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="NotDragging"/>
                                        <VisualState x:Name="Dragging">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
                                                <DragItemThemeAnimation TargetName="InnerDragContent"/>
                                                <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
                                                <FadeOutThemeAnimation TargetName="SelectedBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="DraggingTarget">
                                            <Storyboard>
                                                <DropTargetItemThemeAnimation TargetName="OuterContainer"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MultipleDraggingPrimary">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
                                                <DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
                                                <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
                                                <FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
                                                <DragItemThemeAnimation TargetName="ContentBorder"/>
                                                <FadeOutThemeAnimation TargetName="SelectionBackground"/>
                                                <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
                                                <FadeOutThemeAnimation TargetName="SelectedBorder"/>
                                                <FadeOutThemeAnimation TargetName="PointerOverBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MultipleDraggingSecondary">
                                            <Storyboard>
                                                <FadeOutThemeAnimation TargetName="ContentContainer"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ReorderHintStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="NoReorderHint"/>
                                        <VisualState x:Name="BottomReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="TopReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="RightReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="LeftReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DataVirtualizationStates">
                                        <VisualState x:Name="DataAvailable"/>
                                        <VisualState x:Name="DataPlaceholder">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="ReorderHintContent" Background="Transparent">
                                    <Border x:Name="ContentContainer">
                                        <Grid x:Name="InnerDragContent">
                                            <Rectangle x:Name="PointerOverBorder" Fill="{StaticResource ListViewItemPointerOverBackgroundThemeBrush}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                                            <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
                                            <Rectangle x:Name="SelectionBackground" Fill="{x:Null}" Margin="4" Opacity="0"/>
                                            <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
                                                <Grid>
                                                    <ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Text="Xg" Visibility="Collapsed"/>
                                                    <Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                    <Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Opacity="0" Stroke="#F7FF5B" StrokeThickness="{StaticResource GridViewItemSelectedBorderThemeThickness}"/>
                                                    <Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
                                                </Grid>
                                            </Border>
                                            <TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        <!-- Scenario #2 Resources -->

        <DataTemplate x:Key="MessageListImageTemplate">
            <Grid HorizontalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0,0,0,0" Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Style="{StaticResource ImagePlaceHolderStyle}" Margin="0,8,0,8" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Image Source="{Binding Image}" Margin="0" Stretch="UniformToFill"/>
                </Border>
                <StackPanel Grid.Column="1" Style="{StaticResource MoCoContentTextStackPanelStyle}" HorizontalAlignment="Left" Margin="10,8,0,0">
                    <TextBlock TextTrimming="WordEllipsis" Text="{Binding Title}" Style="{StaticResource NonWrappingSmallContentTextStyle}" Width="200" Height="20"/>
                    <TextBlock Text="{Binding Subtitle}" TextWrapping="Wrap" TextTrimming="WordEllipsis" Style="{StaticResource SubHeaderTextStyle}" Width="200" Height="20" Margin="0,0,0,0"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="MessageListItemsPanelTemplate">
            <StackPanel Margin="0,0,0,0" Width="Auto"/>
        </ItemsPanelTemplate>

        <!-- Scenario #3 Resources -->

        <DataTemplate x:Key="ReviewsItemsTemplate">
            <StackPanel Margin="0,0,0,20">
                <TextBlock Text="{Binding Title}"  Style="{StaticResource MediumContentFontSize}"/>
                <TextBlock Text="{Binding Content}"  TextWrapping="Wrap" Style="{StaticResource SmallContentFontStyle}"/>
            </StackPanel>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="ReviewsItemsPanelTemplate">
            <StackPanel Margin="0,0,0,0" Width="Auto"/>
        </ItemsPanelTemplate>
            
        <Style x:Key="TextButtonStyle" TargetType="Button">
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent">
                                <TextBlock
                            x:Name="Text"
                            Text="{TemplateBinding Content}"
                            Margin="3,-7,3,10"
                            TextWrapping="NoWrap"
                                    Style="{StaticResource SubheaderTextStyle}"/>
                                <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                                <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPointerOverForegroundThemeBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CustomButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="#FF3B454F"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid> 
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Border" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" To="LightGray" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates"/>
                                </VisualStateManager.VisualStateGroups>
                                <Grid>
                                    <Rectangle x:Name="Border" Fill="#F7FF5B" Margin="-5"/>
                                    <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>  